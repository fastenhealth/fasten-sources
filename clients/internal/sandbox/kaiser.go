// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package sandbox

import (
	"context"
	base "github.com/fastenhealth/fasten-sources/clients/internal/base"
	models "github.com/fastenhealth/fasten-sources/clients/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
	logrus "github.com/sirupsen/logrus"
	"net/http"
)

type SourceClientKaiser struct {
	models.SourceClient
}

// https://kpx-service-bus.kp.org/service/cdo/siae/healthplankpxv1rc/metadata
// https://developer.kp.org/#/apis
func GetSourceClientKaiser(env pkg.FastenLighthouseEnvType, ctx context.Context, globalLogger logrus.FieldLogger, sourceCreds models.SourceCredential, testHttpClient ...*http.Client) (models.SourceClient, error) {
	baseClient, err := base.GetSourceClientFHIR401(env, ctx, globalLogger, sourceCreds, testHttpClient...)

	return SourceClientKaiser{baseClient}, err
}

// Operation-PatientEverything uses non-standard endpoint - https://build.fhir.org/operation-patient-everything.html
func (c SourceClientKaiser) SyncAll(db models.DatabaseRepository) (models.UpsertSummary, error) {
	bundle, err := c.GetResourceBundle("ExplanationOfBenefit?_includes=*")
	if err != nil {
		return models.UpsertSummary{UpdatedResources: []string{}}, err
	}
	return c.SyncAllByPatientEverythingBundle(db, bundle)
}
