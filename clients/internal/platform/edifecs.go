// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package platform

import (
	"context"
	base "github.com/fastenhealth/fasten-sources/clients/internal/base"
	models "github.com/fastenhealth/fasten-sources/clients/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
	logrus "github.com/sirupsen/logrus"
	"net/http"
)

type sourceClientEdifecs struct {
	models.SourceClient
}

// https://fhir.collablynk.com/edifecs/fhir/R4/.well-known/smart-configuration
// https://fhir.collablynk.com/edifecs/fhir/R4/metadata
// https://confluence.hl7.org/display/FHIR/Public+Test+Servers
func GetSourceClientEdifecs(env pkg.FastenLighthouseEnvType, ctx context.Context, globalLogger logrus.FieldLogger, sourceCreds models.SourceCredential, testHttpClient ...*http.Client) (models.SourceClient, error) {
	baseClient, err := base.GetSourceClientFHIR401(env, ctx, globalLogger, sourceCreds, testHttpClient...)
	if err != nil {
		return nil, err
	}
	// API requires the following headers for every request
	baseClient.Headers["Accept"] = "application/fhir+json"

	return sourceClientEdifecs{baseClient}, err
}

// Operation-PatientEverything is not supported - https://build.fhir.org/operation-patient-everything.html
// Manually processing individual resources
func (c sourceClientEdifecs) SyncAll(db models.DatabaseRepository) (models.UpsertSummary, error) {
	supportedResources := append(c.GetUsCoreResources(), []string{"Coverage", "ExplanationOfBenefit", "Medication", "DetectedIssue", "ResearchStudy", "ImmunizationRecommendation", "ServiceRequest", "MedicationStatement", "MedicationDispense", "InsurancePlan", "HealthcareService", "PractitionerRole"}...)
	return c.SyncAllByResourceName(db, supportedResources)
}
