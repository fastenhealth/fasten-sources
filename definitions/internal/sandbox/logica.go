// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package sandbox

import (
	definitions "github.com/fastenhealth/fasten-sources/definitions"
	models "github.com/fastenhealth/fasten-sources/definitions/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
)

// https://api.logicahealth.org/fastenhealth/open/.well-known/smart-configuration
// https://developer.cigna.com/service-apis/patient-access/sandbox#How-to-Use-the-Sandbox-Sandbox-Test-Users
func GetSourceLogica(env pkg.FastenEnvType) (models.LighthouseSourceDefinition, error) {
	sourceDef := models.LighthouseSourceDefinition{}
	sourceDef.AuthorizationEndpoint = "https://auth.logicahealth.org/authorize"
	sourceDef.TokenEndpoint = "https://auth.logicahealth.org/token"
	sourceDef.IntrospectionEndpoint = "https://auth.logicahealth.org/introspect"

	sourceDef.Issuer = "https://auth.logicahealth.org"
	sourceDef.Scopes = []string{"fhirUser", "offline_access", "openid", "patient/*.read"}
	sourceDef.GrantTypesSupported = []string{"authorization_code"}
	sourceDef.ResponseType = []string{"code"}
	sourceDef.ResponseModesSupported = []string{"fragment", "query"}
	sourceDef.Audience = "https://api.logicahealth.org/fastenhealth/data"
	sourceDef.CodeChallengeMethodsSupported = []string{"S256"}

	sourceDef.ApiEndpointBaseUrl = "https://api.logicahealth.org/fastenhealth/data"
	if env == pkg.FastenEnvProduction {
		sourceDef.ClientId = "12b14c49-a4da-42f7-9e6f-2f19db622962"
	} else {
		sourceDef.ClientId = "12b14c49-a4da-42f7-9e6f-2f19db622962"
	}
	sourceDef.RedirectUri = pkg.GetCallbackEndpoint(string(definitions.SourceTypeLogica))

	sourceDef.Display = "Logica (Sandbox)"
	sourceDef.SourceType = definitions.SourceTypeLogica
	sourceDef.Category = []string{"Sandbox"}
	sourceDef.Enabled = true

	return sourceDef, nil
}
