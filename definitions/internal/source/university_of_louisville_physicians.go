// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package source

import (
	platform "github.com/fastenhealth/fasten-sources/definitions/internal/platform"
	models "github.com/fastenhealth/fasten-sources/definitions/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
)

// https://epicproxy.et1193.epichosted.com/FHIRProxy/api/FHIR/R4/metadata
func GetSourceUniversityOfLouisvillePhysicians(env pkg.FastenLighthouseEnvType, clientIdLookup map[pkg.SourceType]string) (models.LighthouseSourceDefinition, error) {
	sourceDef, err := platform.GetSourceEpic(env, clientIdLookup)
	sourceDef.AuthorizationEndpoint = "https://epicproxy.et1193.epichosted.com/FHIRProxy/oauth2/authorize"
	sourceDef.TokenEndpoint = "https://epicproxy.et1193.epichosted.com/FHIRProxy/oauth2/token"
	sourceDef.RegistrationEndpoint = "https://epicproxy.et1193.epichosted.com/FHIRProxy/oauth2/register"

	sourceDef.Audience = "https://epicproxy.et1193.epichosted.com/FHIRProxy/api/FHIR/R4"

	sourceDef.ApiEndpointBaseUrl = "https://epicproxy.et1193.epichosted.com/FHIRProxy/api/FHIR/R4"
	// retrieve client-id, if available
	if clientId, clientIdOk := clientIdLookup[pkg.SourceTypeUniversityOfLouisvillePhysicians]; clientIdOk {
		sourceDef.ClientId = clientId
	}
	sourceDef.RedirectUri = pkg.GetCallbackEndpoint(string(pkg.SourceTypeEpic))

	sourceDef.Display = "University of Louisville Physicians"
	sourceDef.SourceType = pkg.SourceTypeUniversityOfLouisvillePhysicians
	sourceDef.Category = []string{"207K00000X", "208000000X", "2080C0008X", "2080P0203X", "2080P0210X", "2080S0012X", "2086S0127X", "282NC0060X", "363L00000X", "363LF0000X"}
	sourceDef.Identifiers = map[string][]string{"http://hl7.org/fhir/sid/us-npi": []string{"1073879797", "1164788899", "1255697983", "1386011054", "1386076172", "1639435670", "1639435688", "1700156353", "1932564226", "1982960605"}}
	sourceDef.PatientAccessUrl = "https://uoflhealth.org/"
	sourceDef.SecretKeyPrefix = "epic"

	return sourceDef, err
}
