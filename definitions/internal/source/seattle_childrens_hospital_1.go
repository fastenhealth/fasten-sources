// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package source

import (
	platform "github.com/fastenhealth/fasten-sources/definitions/internal/platform"
	models "github.com/fastenhealth/fasten-sources/definitions/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
)

// https://fhir.seattlechildrens.org/fhir/api/FHIR/R4/metadata
func GetSourceSeattleChildrensHospital1(env pkg.FastenLighthouseEnvType, clientIdLookup map[pkg.SourceType]string) (models.LighthouseSourceDefinition, error) {
	sourceDef, err := platform.GetSourceEpic(env, clientIdLookup)
	sourceDef.AuthorizationEndpoint = "https://fhir.seattlechildrens.org/fhir/oauth2/authorize"
	sourceDef.TokenEndpoint = "https://fhir.seattlechildrens.org/fhir/oauth2/token"

	sourceDef.Audience = "https://fhir.seattlechildrens.org/fhir/api/FHIR/R4"

	sourceDef.ApiEndpointBaseUrl = "https://fhir.seattlechildrens.org/fhir/api/FHIR/R4"
	// retrieve client-id, if available
	if clientId, clientIdOk := clientIdLookup[pkg.SourceTypeSeattleChildrensHospital1]; clientIdOk {
		sourceDef.ClientId = clientId
	}
	sourceDef.RedirectUri = pkg.GetCallbackEndpoint(string(pkg.SourceTypeEpic))

	sourceDef.Display = "Seattle Children's Hospital"
	sourceDef.SourceType = pkg.SourceTypeSeattleChildrensHospital1
	sourceDef.Category = []string{"335E00000X", "174400000X", "261QP2300X", "282NC2000X", "332B00000X", "332BP3500X", "332BX2000X", "3336H0001X", "251F00000X", "261QE0700X", "273R00000X", "261QS0112X", "261QD0000X", "237600000X"}
	sourceDef.Aliases = []string{"ODESSA BROWN CHILDREN'S CLINIC", "SEATTLE CHILDREN'S TRI-CITIES CLINIC", "SEATTLE CHILDREN'S HOSPITAL"}
	sourceDef.Identifiers = map[string][]string{"http://hl7.org/fhir/sid/us-npi": []string{"1033288444", "1134251747", "1346548963", "1245383348", "1811041692", "1225269715", "1477622595", "1467704841", "1265505432", "1003319500"}}
	sourceDef.BrandLogo = "seattle-childrens-hospital.png"
	sourceDef.SecretKeyPrefix = "epic"

	return sourceDef, err
}
