// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package source

import (
	platform "github.com/fastenhealth/fasten-sources/definitions/internal/platform"
	models "github.com/fastenhealth/fasten-sources/definitions/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
)

// https://fhir-myrecord.cerner.com/r4/5Rx5ezruUpSXrd5Aut0-NzcXZSNNi8DC/metadata
func GetSourceCarondeletHealthNetwork(env pkg.FastenLighthouseEnvType, clientIdLookup map[pkg.SourceType]string) (models.LighthouseSourceDefinition, error) {
	sourceDef, err := platform.GetSourceCerner(env, clientIdLookup)
	sourceDef.AuthorizationEndpoint = "https://authorization.cerner.com/tenants/5Rx5ezruUpSXrd5Aut0-NzcXZSNNi8DC/protocols/oauth2/profiles/smart-v1/personas/patient/authorize"
	sourceDef.TokenEndpoint = "https://authorization.cerner.com/tenants/5Rx5ezruUpSXrd5Aut0-NzcXZSNNi8DC/protocols/oauth2/profiles/smart-v1/token"
	sourceDef.IntrospectionEndpoint = "https://authorization.cerner.com/tokeninfo"

	sourceDef.Audience = "https://fhir-myrecord.cerner.com/r4/5Rx5ezruUpSXrd5Aut0-NzcXZSNNi8DC"

	sourceDef.ApiEndpointBaseUrl = "https://fhir-myrecord.cerner.com/r4/5Rx5ezruUpSXrd5Aut0-NzcXZSNNi8DC"
	// retrieve client-id, if available
	if clientId, clientIdOk := clientIdLookup[pkg.SourceTypeCarondeletHealthNetwork]; clientIdOk {
		sourceDef.ClientId = clientId
	}
	sourceDef.RedirectUri = pkg.GetCallbackEndpoint(string(pkg.SourceTypeCerner))

	sourceDef.Display = "Carondelet Health Network"
	sourceDef.SourceType = pkg.SourceTypeCarondeletHealthNetwork
	sourceDef.Category = []string{"273R00000X", "282N00000X", "261QR0206X"}
	sourceDef.Identifiers = map[string][]string{"http://hl7.org/fhir/sid/us-npi": []string{"1578648614", "1700961869", "1942385190", "1649355702", "1417290958", "1093884090", "1750788667", "1285719385", "1891870994", "1689759722"}}
	sourceDef.BrandLogo = "carondelet-health-network.jpeg"
	sourceDef.PatientAccessUrl = "https://www.carondelet.org/home"
	sourceDef.SecretKeyPrefix = "cerner"

	return sourceDef, err
}
