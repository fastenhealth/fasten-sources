// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package source

import (
	definitions "github.com/fastenhealth/fasten-sources/definitions"
	models "github.com/fastenhealth/fasten-sources/definitions/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
)

// https://r-hi2.cigna.com/.well-known/smart-configuration
/*
https://developer.cigna.com/service-apis/patient-access/sandbox#How-to-Use-the-Sandbox-Sandbox-Test-Users
*/
func GetSourceCigna(env pkg.FastenEnvType) (models.LighthouseSourceDefinition, error) {
	sourceDef := models.LighthouseSourceDefinition{}
	sourceDef.AuthorizationEndpoint = "https://r-hi2.cigna.com/mga/sps/oauth/oauth20/authorize"
	sourceDef.TokenEndpoint = "https://r-hi2.cigna.com/mga/sps/oauth/oauth20/token"
	sourceDef.IntrospectionEndpoint = "https://r-hi2.cigna.com/mga/sps/oauth/oauth20/introspect"

	sourceDef.Issuer = "https://r-hi2.cigna.com"
	sourceDef.Scopes = []string{"fhirUser", "offline_access", "openid", "patient/*.read"}
	sourceDef.GrantTypesSupported = []string{"authorization_code"}
	sourceDef.ResponseType = []string{"code"}
	sourceDef.ResponseModesSupported = []string{"fragment", "query"}
	sourceDef.CodeChallengeMethodsSupported = []string{"S256"}

	sourceDef.ApiEndpointBaseUrl = "https://p-hi2.digitaledge.cigna.com/PatientAccess/v1-devportal"
	if env == pkg.FastenEnvSandbox {
		sourceDef.ClientId = "5bf24f17-3554-404f-8c67-ccbea00438ad"
	}
	sourceDef.RedirectUri = pkg.GetCallbackEndpoint(string(definitions.SourceTypeCigna))

	sourceDef.Display = "Cigna"
	sourceDef.SourceType = definitions.SourceTypeCigna
	sourceDef.Category = []string{"Insurance", "Hospital"}
	sourceDef.Enabled = true

	return sourceDef, nil
}
