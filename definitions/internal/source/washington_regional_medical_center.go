// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package source

import (
	platform "github.com/fastenhealth/fasten-sources/definitions/internal/platform"
	models "github.com/fastenhealth/fasten-sources/definitions/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
)

// https://wrm-fhir.allscriptscloud.com/FHIR/metadata
func GetSourceWashingtonRegionalMedicalCenter(env pkg.FastenLighthouseEnvType, clientIdLookup map[pkg.SourceType]string) (models.LighthouseSourceDefinition, error) {
	sourceDef, err := platform.GetSourceAllscripts(env, clientIdLookup)
	sourceDef.AuthorizationEndpoint = "https://wrm-fhir.allscriptscloud.com/authorization/connect/authorize"
	sourceDef.TokenEndpoint = "https://wrm-fhir.allscriptscloud.com/authorization/connect/token"

	sourceDef.Audience = "https://wrm-fhir.allscriptscloud.com/FHIR"

	sourceDef.ApiEndpointBaseUrl = "https://wrm-fhir.allscriptscloud.com/FHIR"
	// retrieve client-id, if available
	if clientId, clientIdOk := clientIdLookup[pkg.SourceTypeWashingtonRegionalMedicalCenter]; clientIdOk {
		sourceDef.ClientId = clientId
	}
	sourceDef.RedirectUri = pkg.GetCallbackEndpoint(string(pkg.SourceTypeAllscripts))

	sourceDef.Display = "Washington Regional Medical Center"
	sourceDef.SourceType = pkg.SourceTypeWashingtonRegionalMedicalCenter
	sourceDef.Category = []string{"341600000X", "282NC0060X", "207P00000X", "275N00000X", "282N00000X", "122300000X", "273R00000X", "251E00000X", "251G00000X"}
	sourceDef.Aliases = []string{"WASHINGTON CO HOSPITAL AMBULANCE", "WASHINGTON COUNTY HOSPITAL", "WASHINGTON REGIONAL MEDICAL CENTER", "WASHINGTON REGIONAL HOME HEALTH"}
	sourceDef.Identifiers = map[string][]string{"http://hl7.org/fhir/sid/us-npi": []string{"1053351031", "1124018494", "1972119782", "1902412729", "1558977371", "1083609150", "1669877668", "1063407138", "1497956213", "1811198641"}}
	sourceDef.Hidden = true
	sourceDef.SecretKeyPrefix = "allscripts"

	return sourceDef, err
}
