// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package source

import (
	platform "github.com/fastenhealth/fasten-sources/definitions/internal/platform"
	models "github.com/fastenhealth/fasten-sources/definitions/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
)

// https://wecare.pinerest.org/fhirproxy/api/FHIR/R4/metadata
func GetSourcePineRestChristianMentalHealthServices(env pkg.FastenLighthouseEnvType, clientIdLookup map[pkg.SourceType]string) (models.LighthouseSourceDefinition, error) {
	sourceDef, err := platform.GetSourceEpic(env, clientIdLookup)
	sourceDef.AuthorizationEndpoint = "https://wecare.pinerest.org/fhirproxy/oauth2/authorize"
	sourceDef.TokenEndpoint = "https://wecare.pinerest.org/fhirproxy/oauth2/token"
	sourceDef.RegistrationEndpoint = "https://wecare.pinerest.org/fhirproxy/oauth2/register"

	sourceDef.Audience = "https://wecare.pinerest.org/fhirproxy/api/FHIR/R4"

	sourceDef.ApiEndpointBaseUrl = "https://wecare.pinerest.org/fhirproxy/api/FHIR/R4"
	// retrieve client-id, if available
	if clientId, clientIdOk := clientIdLookup[pkg.SourceTypePineRestChristianMentalHealthServices]; clientIdOk {
		sourceDef.ClientId = clientId
	}
	sourceDef.RedirectUri = pkg.GetCallbackEndpoint(string(pkg.SourceTypeEpic))

	sourceDef.Display = "Pine Rest Christian Mental Health Services"
	sourceDef.SourceType = pkg.SourceTypePineRestChristianMentalHealthServices
	sourceDef.Category = []string{"324500000X", "363A00000X", "363LP0808X", "101YA0400X", "101YP2500X", "103T00000X", "1041C0700X", "207RA0401X", "2084P0800X", "283Q00000X", "208D00000X", "104100000X", "363L00000X", "101Y00000X", "103G00000X", "207R00000X", "208000000X", "235Z00000X", "101YM0800X"}
	sourceDef.Identifiers = map[string][]string{"http://hl7.org/fhir/sid/us-npi": []string{"1952818551", "1609884642", "1699786335", "1275544413", "1033129101", "1609887843", "1891703252", "1245372150", "1467873414", "1679777049"}}
	sourceDef.SecretKeyPrefix = "epic"

	return sourceDef, err
}
