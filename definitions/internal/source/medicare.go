// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package source

import (
	platform "github.com/fastenhealth/fasten-sources/definitions/internal/platform"
	models "github.com/fastenhealth/fasten-sources/definitions/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
)

// https://api.bluebutton.cms.gov/.well-known/openid-configuration-v2
func GetSourceMedicare(env pkg.FastenLighthouseEnvType, clientIdLookup map[pkg.SourceType]string) (models.LighthouseSourceDefinition, error) {
	sourceDef, err := platform.GetSourceMedicareSandbox(env, clientIdLookup)
	sourceDef.AuthorizationEndpoint = "https://api.bluebutton.cms.gov/v2/o/authorize/"
	sourceDef.TokenEndpoint = "https://api.bluebutton.cms.gov/v2/o/token/"
	sourceDef.UserInfoEndpoint = "https://api.bluebutton.cms.gov/v2/connect/userinfo"

	sourceDef.Issuer = "https://api.bluebutton.cms.gov"
	sourceDef.Audience = "https://api.bluebutton.cms.gov/v2/fhir"

	sourceDef.ApiEndpointBaseUrl = "https://api.bluebutton.cms.gov/v2/fhir"
	// retrieve client-id, if available
	if clientId, clientIdOk := clientIdLookup[pkg.SourceTypeMedicare]; clientIdOk {
		sourceDef.ClientId = clientId
	}
	sourceDef.RedirectUri = pkg.GetCallbackEndpoint(string(pkg.SourceTypeMedicare))

	sourceDef.Display = "Medicare"
	sourceDef.PlatformType = pkg.SourceTypeMedicare
	sourceDef.SourceType = pkg.SourceTypeMedicare
	sourceDef.Category = []string{}
	sourceDef.Aliases = []string{}
	sourceDef.PatientAccessUrl = "https://www.medicare.gov"

	return sourceDef, err
}
