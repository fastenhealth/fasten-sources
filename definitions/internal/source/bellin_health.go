// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package source

import (
	platform "github.com/fastenhealth/fasten-sources/definitions/internal/platform"
	models "github.com/fastenhealth/fasten-sources/definitions/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
)

// https://arr.thedacare.org/FHIR/BLN/api/FHIR/R4/metadata
func GetSourceBellinHealth(env pkg.FastenLighthouseEnvType, clientIdLookup map[pkg.SourceType]string) (models.LighthouseSourceDefinition, error) {
	sourceDef, err := platform.GetSourceEpic(env, clientIdLookup)
	sourceDef.AuthorizationEndpoint = "https://arr.thedacare.org/FHIR/BLN/oauth2/authorize"
	sourceDef.TokenEndpoint = "https://arr.thedacare.org/FHIR/BLN/oauth2/token"
	sourceDef.RegistrationEndpoint = "https://arr.thedacare.org/FHIR/BLN/oauth2/register"

	sourceDef.Audience = "https://arr.thedacare.org/FHIR/BLN/api/FHIR/R4"

	sourceDef.ApiEndpointBaseUrl = "https://arr.thedacare.org/FHIR/BLN/api/FHIR/R4"
	// retrieve client-id, if available
	if clientId, clientIdOk := clientIdLookup[pkg.SourceTypeBellinHealth]; clientIdOk {
		sourceDef.ClientId = clientId
	}
	sourceDef.RedirectUri = pkg.GetCallbackEndpoint(string(pkg.SourceTypeEpic))

	sourceDef.Display = "Bellin Health"
	sourceDef.SourceType = pkg.SourceTypeBellinHealth
	sourceDef.Category = []string{"133V00000X", "207L00000X", "207R00000X", "207V00000X", "207Y00000X", "208000000X", "2085R0202X", "225100000X", "2251X0800X", "225X00000X", "363A00000X", "363L00000X", "367500000X", "207Q00000X", "207RC0000X", "207RC0001X", "207RE0101X", "207RG0100X", "207VX0201X", "207X00000X"}
	sourceDef.Aliases = []string{"BELLIN HEALTH"}
	sourceDef.Identifiers = map[string][]string{"http://hl7.org/fhir/sid/us-npi": []string{"1114579836", "1407033111", "1033172390"}}
	sourceDef.SecretKeyPrefix = "epic"

	return sourceDef, err
}
