// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package source

import (
	platform "github.com/fastenhealth/fasten-sources/definitions/internal/platform"
	models "github.com/fastenhealth/fasten-sources/definitions/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
)

// https://epicproxy.rush.edu/fhir-prd/api/FHIR/R4/metadata
func GetSourceRushUniversityMedicalCenter(env pkg.FastenLighthouseEnvType, clientIdLookup map[pkg.SourceType]string) (models.LighthouseSourceDefinition, error) {
	sourceDef, err := platform.GetSourceEpic(env, clientIdLookup)
	sourceDef.AuthorizationEndpoint = "https://epicproxy.rush.edu/fhir-prd/oauth2/authorize"
	sourceDef.TokenEndpoint = "https://epicproxy.rush.edu/fhir-prd/oauth2/token"
	sourceDef.RegistrationEndpoint = "https://epicproxy.rush.edu/fhir-prd/oauth2/register"

	sourceDef.Audience = "https://epicproxy.rush.edu/fhir-prd/api/FHIR/R4"

	sourceDef.ApiEndpointBaseUrl = "https://epicproxy.rush.edu/fhir-prd/api/FHIR/R4"
	// retrieve client-id, if available
	if clientId, clientIdOk := clientIdLookup[pkg.SourceTypeRushUniversityMedicalCenter]; clientIdOk {
		sourceDef.ClientId = clientId
	}
	sourceDef.RedirectUri = pkg.GetCallbackEndpoint(string(pkg.SourceTypeEpic))

	sourceDef.Display = "Rush University Medical Center"
	sourceDef.SourceType = pkg.SourceTypeRushUniversityMedicalCenter
	sourceDef.Category = []string{"2085N0700X", "2085R0204X", "2085R0202X", "208000000X", "207R00000X", "363L00000X", "207VM0101X", "207V00000X", "282NC2000X", "261Q00000X", "174400000X", "281P00000X", "282N00000X", "282NC0060X"}
	sourceDef.Aliases = []string{"RADIOLOGY SERVICES", "RUSH COLLEGE OF NURSING SUE GIN HEALTH CENTER AT OAKLEY SQUARE"}
	sourceDef.Identifiers = map[string][]string{"http://hl7.org/fhir/sid/us-npi": []string{"1184269425", "1902873003", "1154382893", "1316067994", "1396906103", "1699921007", "1093036980", "1396184669", "1790116176", "1356891618"}}
	sourceDef.SecretKeyPrefix = "epic"

	return sourceDef, err
}
