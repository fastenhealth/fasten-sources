// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package source

import (
	models "github.com/fastenhealth/fasten-sources/definitions/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
)

// https://sierra.fhir.flex.optum.com/R4/.well-known/smart-configuration
// https://sierra.fhir.flex.optum.com/R4/metadata
func GetSourceSierrahealthandlife(env pkg.FastenLighthouseEnvType, clientIdLookup map[pkg.SourceType]string) (models.LighthouseSourceDefinition, error) {
	sourceDef, err := GetSourceUnitedhealthcare(env, clientIdLookup)
	sourceDef.AuthorizationEndpoint = "https://sierra.authz.flex.optum.com/oauth/authorize"
	sourceDef.TokenEndpoint = "https://sierra.authz.flex.optum.com/oauth/token"
	sourceDef.IntrospectionEndpoint = "https://sierra.authz.flex.optum.com/.well-known/jwks.json"
	sourceDef.UserInfoEndpoint = "https://sierra.authz.flex.optum.com/userinfo"

	sourceDef.Issuer = "https://sierra.fhir.flex.optum.com/R4"
	sourceDef.Audience = "https://sierra.fhir.flex.optum.com/R4"

	sourceDef.ApiEndpointBaseUrl = "https://sierra.fhir.flex.optum.com/R4"
	// retrieve client-id, if available
	if clientId, clientIdOk := clientIdLookup[pkg.SourceTypeSierrahealthandlife]; clientIdOk {
		sourceDef.ClientId = clientId
	}
	sourceDef.RedirectUri = pkg.GetCallbackEndpoint(string(pkg.SourceTypeUnitedhealthcare))

	sourceDef.Display = "Sierra Health and Life"
	sourceDef.SourceType = pkg.SourceTypeSierrahealthandlife
	sourceDef.Category = []string{"Insurance"}
	sourceDef.Aliases = []string{}
	sourceDef.PatientAccessUrl = "https://www.sierrahealthandlife.com/"

	return sourceDef, err
}
