// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package source

import (
	platform "github.com/fastenhealth/fasten-sources/definitions/internal/platform"
	models "github.com/fastenhealth/fasten-sources/definitions/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
)

// https://fhir-myrecord.cerner.com/r4/ynC9J_dODQE9MboiEOzSXwBNhdrTWHFe/metadata
func GetSourceDetroitMedicalCenter(env pkg.FastenLighthouseEnvType, clientIdLookup map[pkg.SourceType]string) (models.LighthouseSourceDefinition, error) {
	sourceDef, err := platform.GetSourceCerner(env, clientIdLookup)
	sourceDef.AuthorizationEndpoint = "https://authorization.cerner.com/tenants/ynC9J_dODQE9MboiEOzSXwBNhdrTWHFe/protocols/oauth2/profiles/smart-v1/personas/patient/authorize"
	sourceDef.TokenEndpoint = "https://authorization.cerner.com/tenants/ynC9J_dODQE9MboiEOzSXwBNhdrTWHFe/protocols/oauth2/profiles/smart-v1/token"
	sourceDef.IntrospectionEndpoint = "https://authorization.cerner.com/tokeninfo"

	sourceDef.Audience = "https://fhir-myrecord.cerner.com/r4/ynC9J_dODQE9MboiEOzSXwBNhdrTWHFe"

	sourceDef.ApiEndpointBaseUrl = "https://fhir-myrecord.cerner.com/r4/ynC9J_dODQE9MboiEOzSXwBNhdrTWHFe"
	// retrieve client-id, if available
	if clientId, clientIdOk := clientIdLookup[pkg.SourceTypeDetroitMedicalCenter]; clientIdOk {
		sourceDef.ClientId = clientId
	}
	sourceDef.RedirectUri = pkg.GetCallbackEndpoint(string(pkg.SourceTypeCerner))

	sourceDef.Display = "Detroit Medical Center"
	sourceDef.SourceType = pkg.SourceTypeDetroitMedicalCenter
	sourceDef.Category = []string{"207P00000X", "207R00000X", "208600000X", "282N00000X", "282NW0100X", "284300000X", "390200000X"}
	sourceDef.Aliases = []string{"TENET HEALTH CARE"}
	sourceDef.Identifiers = map[string][]string{"http://hl7.org/fhir/sid/us-npi": []string{"1326268483", "1346508157", "1437349933", "1659511681", "1679732085", "1689815300", "1699327429", "1720229065", "1770853251", "1861621534"}}
	sourceDef.SecretKeyPrefix = "cerner"

	return sourceDef, err
}
