// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package source

import (
	platform "github.com/fastenhealth/fasten-sources/definitions/internal/platform"
	models "github.com/fastenhealth/fasten-sources/definitions/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
)

// https://epicproxy.et0948.epichosted.com/FhirProxy/api/FHIR/R4/metadata
func GetSourceSelectMedical(env pkg.FastenLighthouseEnvType, clientIdLookup map[pkg.SourceType]string) (models.LighthouseSourceDefinition, error) {
	sourceDef, err := platform.GetSourceEpic(env, clientIdLookup)
	sourceDef.AuthorizationEndpoint = "https://epicproxy.et0948.epichosted.com/FhirProxy/oauth2/authorize"
	sourceDef.TokenEndpoint = "https://epicproxy.et0948.epichosted.com/FhirProxy/oauth2/token"
	sourceDef.RegistrationEndpoint = "https://epicproxy.et0948.epichosted.com/FhirProxy/oauth2/register"

	sourceDef.Audience = "https://epicproxy.et0948.epichosted.com/FhirProxy/api/FHIR/R4"

	sourceDef.ApiEndpointBaseUrl = "https://epicproxy.et0948.epichosted.com/FhirProxy/api/FHIR/R4"
	// retrieve client-id, if available
	if clientId, clientIdOk := clientIdLookup[pkg.SourceTypeSelectMedical]; clientIdOk {
		sourceDef.ClientId = clientId
	}
	sourceDef.RedirectUri = pkg.GetCallbackEndpoint(string(pkg.SourceTypeEpic))

	sourceDef.Display = "Select Medical"
	sourceDef.SourceType = pkg.SourceTypeSelectMedical
	sourceDef.Category = []string{"261QP2000X", "3104A0630X"}
	sourceDef.Aliases = []string{}
	sourceDef.Identifiers = map[string][]string{"http://hl7.org/fhir/sid/us-npi": []string{"1497293146", "1578504361", "1629434675", "1710119235", "1760652697", "1912379959", "1932654647"}}
	sourceDef.SecretKeyPrefix = "epic"

	return sourceDef, err
}
