// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package source

import (
	platform "github.com/fastenhealth/fasten-sources/definitions/internal/platform"
	models "github.com/fastenhealth/fasten-sources/definitions/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
)

// https://fhir4.eclinicalworks.com/fhir/r4/JADCDA/metadata
func GetSourcePrimaryCareAssociatesOfTexas(env pkg.FastenLighthouseEnvType, clientIdLookup map[pkg.SourceType]string) (models.LighthouseSourceDefinition, error) {
	sourceDef, err := platform.GetSourceEclinicalworks(env, clientIdLookup)
	sourceDef.AuthorizationEndpoint = "https://oauthserver.eclinicalworks.com/oauth/oauth2/authorize"
	sourceDef.TokenEndpoint = "https://oauthserver.eclinicalworks.com/oauth/oauth2/token"

	sourceDef.Audience = "https://fhir4.eclinicalworks.com/fhir/r4/JADCDA"

	sourceDef.ApiEndpointBaseUrl = "https://fhir4.eclinicalworks.com/fhir/r4/JADCDA"
	// retrieve client-id, if available
	if clientId, clientIdOk := clientIdLookup[pkg.SourceTypePrimaryCareAssociatesOfTexas]; clientIdOk {
		sourceDef.ClientId = clientId
	}
	sourceDef.RedirectUri = pkg.GetCallbackEndpoint(string(pkg.SourceTypeEclinicalworks))

	sourceDef.Display = "Primary Care Associates of Texas"
	sourceDef.SourceType = pkg.SourceTypePrimaryCareAssociatesOfTexas
	sourceDef.Category = []string{"204F00000X", "207N00000X", "207Q00000X", "207R00000X", "207RC0000X", "207RC0001X", "207RG0100X", "207RI0011X", "207RN0300X", "207RT0003X", "207V00000X", "208600000X", "2086X0206X", "363A00000X", "363L00000X"}
	sourceDef.Aliases = []string{"LONGEVITY BARIATRIC AND WELLNESS", "NORTH TEXAS ENDOCRINE CONSULTANTS", "PREMIER OBSTETRICS & GYNECOLOGY", "PRIMARY CARE ASSOCIATES OF TEXAS", "TARRANT NEPHROLOGY ASSOCIATES", "TEXAS CARDIOVASCULAR INSTITUTE"}
	sourceDef.Identifiers = map[string][]string{"http://hl7.org/fhir/sid/us-npi": []string{"1295736973"}}
	sourceDef.SecretKeyPrefix = "eclinicalworks"

	return sourceDef, err
}
