// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package source

import (
	platform "github.com/fastenhealth/fasten-sources/definitions/internal/platform"
	models "github.com/fastenhealth/fasten-sources/definitions/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
)

// https://epicfhir.msmc.com/proxysite-prd/api/FHIR/R4/metadata
func GetSourceMountSinaiMedicalCenter(env pkg.FastenLighthouseEnvType, clientIdLookup map[pkg.SourceType]string) (models.LighthouseSourceDefinition, error) {
	sourceDef, err := platform.GetSourceEpic(env, clientIdLookup)
	sourceDef.AuthorizationEndpoint = "https://epicfhir.msmc.com/proxysite-prd/oauth2/authorize"
	sourceDef.TokenEndpoint = "https://epicfhir.msmc.com/proxysite-prd/oauth2/token"
	sourceDef.RegistrationEndpoint = "https://epicfhir.msmc.com/proxysite-prd/oauth2/register"

	sourceDef.Audience = "https://epicfhir.msmc.com/proxysite-prd/api/FHIR/R4"

	sourceDef.ApiEndpointBaseUrl = "https://epicfhir.msmc.com/proxysite-prd/api/FHIR/R4"
	// retrieve client-id, if available
	if clientId, clientIdOk := clientIdLookup[pkg.SourceTypeMountSinaiMedicalCenter]; clientIdOk {
		sourceDef.ClientId = clientId
	}
	sourceDef.RedirectUri = pkg.GetCallbackEndpoint(string(pkg.SourceTypeEpic))

	sourceDef.Display = "Mount Sinai Medical Center"
	sourceDef.SourceType = pkg.SourceTypeMountSinaiMedicalCenter
	sourceDef.Category = []string{"207R00000X", "207RG0100X", "207T00000X", "207V00000X", "207XS0106X", "2080N0001X", "2084N0400X", "2085R0204X", "2086X0206X", "208800000X", "261QM0855X", "261QM2500X", "261QR1100X", "273R00000X", "282N00000X", "282NC0060X", "282NC2000X"}
	sourceDef.Aliases = []string{}
	sourceDef.Identifiers = map[string][]string{"http://hl7.org/fhir/sid/us-npi": []string{"1003063280", "1275622276", "1366672933", "1487797858", "1558894253", "1639278179", "1659545986", "1750653911", "1831227925", "1922319771"}}
	sourceDef.SecretKeyPrefix = "epic"

	return sourceDef, err
}
