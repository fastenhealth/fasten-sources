// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package source

import (
	platform "github.com/fastenhealth/fasten-sources/definitions/internal/platform"
	models "github.com/fastenhealth/fasten-sources/definitions/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
)

// https://api.platform.athenahealth.com/fhir/r4/metadata
func GetSourceFirstChoiceHealthLoretto(env pkg.FastenLighthouseEnvType, clientIdLookup map[pkg.SourceType]string) (models.LighthouseSourceDefinition, error) {
	sourceDef, err := platform.GetSourceAthena(env, clientIdLookup)
	sourceDef.AuthorizationEndpoint = "https://api.platform.athenahealth.com/oauth2/v1/authorize"
	sourceDef.TokenEndpoint = "https://api.platform.athenahealth.com/oauth2/v1/token"

	sourceDef.Audience = "https://api.platform.athenahealth.com/fhir/r4"

	sourceDef.ApiEndpointBaseUrl = "https://api.platform.athenahealth.com/fhir/r4"
	// retrieve client-id, if available
	if clientId, clientIdOk := clientIdLookup[pkg.SourceTypeFirstChoiceHealthLoretto]; clientIdOk {
		sourceDef.ClientId = clientId
	}
	sourceDef.RedirectUri = pkg.GetCallbackEndpoint(string(pkg.SourceTypeAthena))

	sourceDef.Display = "First Choice Health Loretto"
	sourceDef.SourceType = pkg.SourceTypeFirstChoiceHealthLoretto
	sourceDef.Category = []string{"207Q00000X", "207R00000X", "207V00000X", "208000000X", "208600000X", "261QR1300X", "363A00000X", "363L00000X"}
	sourceDef.Aliases = []string{"ADVANCED NEUROLOGY ASSOCIATES", "FIRST CHOICE HEALTH", "FIRST CHOICE HEALTH LORETTO", "SOUTHERN TENNESSEE EARS NOSE AND THROAT", "SOUTHERN TENNESSEE HEART", "SOUTHERN TENNESSEE INTERNAL MEDICINE", "SOUTHERN TENNESSEE ORTHOPEDIC AND SPINE", "SOUTHERN TENNESSEE PEDIATRICS", "SOUTHERN TENNESSEE SURGICAL SERVICES", "WOMEN'S HEALTH CLINIC"}
	sourceDef.Identifiers = map[string][]string{"http://hl7.org/fhir/sid/us-npi": []string{"1326550732", "1811543929"}}
	sourceDef.SecretKeyPrefix = "athena"

	return sourceDef, err
}
