// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package source

import (
	platform "github.com/fastenhealth/fasten-sources/definitions/internal/platform"
	models "github.com/fastenhealth/fasten-sources/definitions/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
)

// https://api.platform.athenahealth.com/fhir/r4/metadata
func GetSourceRogerWilliamsMedicalCenter(env pkg.FastenLighthouseEnvType, clientIdLookup map[pkg.SourceType]string) (models.LighthouseSourceDefinition, error) {
	sourceDef, err := platform.GetSourceAthena(env, clientIdLookup)
	sourceDef.AuthorizationEndpoint = "https://api.platform.athenahealth.com/oauth2/v1/authorize"
	sourceDef.TokenEndpoint = "https://api.platform.athenahealth.com/oauth2/v1/token"

	sourceDef.Audience = "https://api.platform.athenahealth.com/fhir/r4"

	sourceDef.ApiEndpointBaseUrl = "https://api.platform.athenahealth.com/fhir/r4"
	// retrieve client-id, if available
	if clientId, clientIdOk := clientIdLookup[pkg.SourceTypeRogerWilliamsMedicalCenter]; clientIdOk {
		sourceDef.ClientId = clientId
	}
	sourceDef.RedirectUri = pkg.GetCallbackEndpoint(string(pkg.SourceTypeAthena))

	sourceDef.Display = "Roger Williams Medical Center"
	sourceDef.SourceType = pkg.SourceTypeRogerWilliamsMedicalCenter
	sourceDef.Category = []string{"101YA0400X", "103TA0400X", "104100000X", "1041C0700X", "133N00000X", "174400000X", "207N00000X", "207R00000X", "207RA0401X", "207RC0000X", "207RH0003X", "207RP1001X", "207X00000X", "2084P0802X", "208600000X", "2086X0206X", "213ES0103X", "251E00000X", "261Q00000X", "273R00000X", "282E00000X", "282N00000X"}
	sourceDef.Aliases = []string{"ROGER WILLIAMS MEDICAL CENTER"}
	sourceDef.Identifiers = map[string][]string{"http://hl7.org/fhir/sid/us-npi": []string{"1013332014", "1063853661", "1114961729", "1205563731", "1285059287", "1326463548", "1477977064", "1477978476", "1518987981", "1912253675"}}
	sourceDef.SecretKeyPrefix = "athena"

	return sourceDef, err
}
