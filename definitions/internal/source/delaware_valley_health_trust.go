// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package source

import (
	platform "github.com/fastenhealth/fasten-sources/definitions/internal/platform"
	models "github.com/fastenhealth/fasten-sources/definitions/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
)

// https://fhir-myrecord.cerner.com/r4/b1ef87a9-8303-439c-bd5c-f767f2077a02/metadata
func GetSourceDelawareValleyHealthTrust(env pkg.FastenLighthouseEnvType, clientIdLookup map[pkg.SourceType]string) (models.LighthouseSourceDefinition, error) {
	sourceDef, err := platform.GetSourceCerner(env, clientIdLookup)
	sourceDef.AuthorizationEndpoint = "https://authorization.cerner.com/tenants/b1ef87a9-8303-439c-bd5c-f767f2077a02/protocols/oauth2/profiles/smart-v1/personas/patient/authorize"
	sourceDef.TokenEndpoint = "https://authorization.cerner.com/tenants/b1ef87a9-8303-439c-bd5c-f767f2077a02/protocols/oauth2/profiles/smart-v1/token"
	sourceDef.IntrospectionEndpoint = "https://authorization.cerner.com/tokeninfo"

	sourceDef.Audience = "https://fhir-myrecord.cerner.com/r4/b1ef87a9-8303-439c-bd5c-f767f2077a02"

	sourceDef.ApiEndpointBaseUrl = "https://fhir-myrecord.cerner.com/r4/b1ef87a9-8303-439c-bd5c-f767f2077a02"
	// retrieve client-id, if available
	if clientId, clientIdOk := clientIdLookup[pkg.SourceTypeDelawareValleyHealthTrust]; clientIdOk {
		sourceDef.ClientId = clientId
	}
	sourceDef.RedirectUri = pkg.GetCallbackEndpoint(string(pkg.SourceTypeCerner))

	sourceDef.Display = "Delaware Valley Health Trust"
	sourceDef.SourceType = pkg.SourceTypeDelawareValleyHealthTrust
	sourceDef.Category = []string{"332900000X", "261Q00000X"}
	sourceDef.Aliases = []string{"DELAWARE VALLEY HEALTH TRUST"}
	sourceDef.Identifiers = map[string][]string{"http://hl7.org/fhir/sid/us-npi": []string{"1932723806", "1962028969"}}
	sourceDef.PatientAccessUrl = "https://worker.mturk.com/projects/3CTCX9NXCJJWWANBW47QJI84M2SJLA/tasks/334ZEL5JYJCWWYBNELMMSHI5BG8SOZ?assignment_id=3C44YUNSIFMA1T20MX9DB2XKUIPDPT&from_queue=true"
	sourceDef.SecretKeyPrefix = "cerner"

	return sourceDef, err
}
