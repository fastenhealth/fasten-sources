// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package source

import (
	platform "github.com/fastenhealth/fasten-sources/definitions/internal/platform"
	models "github.com/fastenhealth/fasten-sources/definitions/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
)

// https://fhir.clinical.bcm.edu/stage1fhir/api/FHIR/R4/metadata
func GetSourceBaylorCollegeOfMedicine(env pkg.FastenLighthouseEnvType, clientIdLookup map[pkg.SourceType]string) (models.LighthouseSourceDefinition, error) {
	sourceDef, err := platform.GetSourceEpic(env, clientIdLookup)
	sourceDef.AuthorizationEndpoint = "https://fhir.clinical.bcm.edu/Stage1Fhir/oauth2/authorize"
	sourceDef.TokenEndpoint = "https://fhir.clinical.bcm.edu/Stage1Fhir/oauth2/token"

	sourceDef.Audience = "https://fhir.clinical.bcm.edu/stage1fhir/api/FHIR/R4"

	sourceDef.ApiEndpointBaseUrl = "https://fhir.clinical.bcm.edu/stage1fhir/api/FHIR/R4"
	// retrieve client-id, if available
	if clientId, clientIdOk := clientIdLookup[pkg.SourceTypeBaylorCollegeOfMedicine]; clientIdOk {
		sourceDef.ClientId = clientId
	}
	sourceDef.RedirectUri = pkg.GetCallbackEndpoint(string(pkg.SourceTypeEpic))

	sourceDef.Display = "Baylor College of Medicine"
	sourceDef.SourceType = pkg.SourceTypeBaylorCollegeOfMedicine
	sourceDef.Category = []string{"207RE0101X", "207N00000X", "207L00000X", "207R00000X", "207V00000X", "207W00000X", "207X00000X", "207Y00000X", "208000000X", "208100000X", "2084N0400X", "2084P0800X", "2085R0202X", "208600000X", "208800000X", "207Q00000X", "170100000X", "207T00000X", "208200000X", "282N00000X", "283Q00000X", "284300000X"}
	sourceDef.Aliases = []string{"BCM PHYSICIANS", "BCM PHYSICIANS OF SAN ANTONIO"}
	sourceDef.Identifiers = map[string][]string{"http://hl7.org/fhir/sid/us-npi": []string{"1982778544", "1457556565", "1285079764", "1881026664", "1124413513", "1821548488", "1730132721", "1386691681", "1164463287", "1801177555", "1497843700"}}
	sourceDef.SecretKeyPrefix = "epic"

	return sourceDef, err
}
