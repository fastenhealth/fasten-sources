// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package source

import (
	platform "github.com/fastenhealth/fasten-sources/definitions/internal/platform"
	models "github.com/fastenhealth/fasten-sources/definitions/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
)

// https://fhir.nextgen.com/nge/prod/fhir-api-r4/fhir/r4/metadata
func GetSourceCountyOfIngham(env pkg.FastenLighthouseEnvType, clientIdLookup map[pkg.SourceType]string) (models.LighthouseSourceDefinition, error) {
	sourceDef, err := platform.GetSourceNextgen(env, clientIdLookup)
	sourceDef.AuthorizationEndpoint = "https://fhir.nextgen.com/nge/prod/patient-oauth/authorize"
	sourceDef.TokenEndpoint = "https://fhir.nextgen.com/nge/prod/patient-oauth/token"

	sourceDef.Audience = "https://fhir.nextgen.com/nge/prod/fhir-api-r4/fhir/r4"

	sourceDef.ApiEndpointBaseUrl = "https://fhir.nextgen.com/nge/prod/fhir-api-r4/fhir/r4"
	// retrieve client-id, if available
	if clientId, clientIdOk := clientIdLookup[pkg.SourceTypeCountyOfIngham]; clientIdOk {
		sourceDef.ClientId = clientId
	}
	sourceDef.RedirectUri = pkg.GetCallbackEndpoint(string(pkg.SourceTypeNextgen))

	sourceDef.Display = "County Of Ingham"
	sourceDef.SourceType = pkg.SourceTypeCountyOfIngham
	sourceDef.Category = []string{"251K00000X", "261QF0400X"}
	sourceDef.Aliases = []string{"ALLEN ICHD", "BIRCH ICHD", "EASTERN COMMUNITY HEALTH CENTER", "EVERETT ICHD", "GARDNER ICHD", "NEW HOPE COMMUNITY HEALTH CENTER", "SEXTON COMMUNITY HEALTH CENTER", "WELL CHILD HEALTH CENTER OF INGHAM COUNTY", "WILLOW COMMUNITY HEALTH CENTER"}
	sourceDef.Identifiers = map[string][]string{"http://hl7.org/fhir/sid/us-npi": []string{"1235854985", "1629523212", "1700431632", "1679120810", "1710386776", "1013299130", "1285007740", "1487930152", "1326560145", "1487201620"}}
	sourceDef.BrandLogo = "county-of-ingham.jpg"
	sourceDef.PatientAccessUrl = "https://www.facebook.com/InghamHealth/"
	sourceDef.SecretKeyPrefix = "nextgen"

	return sourceDef, err
}
