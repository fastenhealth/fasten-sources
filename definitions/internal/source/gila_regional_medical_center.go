// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package source

import (
	platform "github.com/fastenhealth/fasten-sources/definitions/internal/platform"
	models "github.com/fastenhealth/fasten-sources/definitions/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
)

// https://api.platform.athenahealth.com/fhir/r4/metadata
func GetSourceGilaRegionalMedicalCenter(env pkg.FastenLighthouseEnvType, clientIdLookup map[pkg.SourceType]string) (models.LighthouseSourceDefinition, error) {
	sourceDef, err := platform.GetSourceAthena(env, clientIdLookup)
	sourceDef.AuthorizationEndpoint = "https://api.platform.athenahealth.com/oauth2/v1/authorize"
	sourceDef.TokenEndpoint = "https://api.platform.athenahealth.com/oauth2/v1/token"

	sourceDef.Audience = "https://api.platform.athenahealth.com/fhir/r4"

	sourceDef.ApiEndpointBaseUrl = "https://api.platform.athenahealth.com/fhir/r4"
	// retrieve client-id, if available
	if clientId, clientIdOk := clientIdLookup[pkg.SourceTypeGilaRegionalMedicalCenter]; clientIdOk {
		sourceDef.ClientId = clientId
	}
	sourceDef.RedirectUri = pkg.GetCallbackEndpoint(string(pkg.SourceTypeAthena))

	sourceDef.Display = "Gila Regional Medical Center"
	sourceDef.SourceType = pkg.SourceTypeGilaRegionalMedicalCenter
	sourceDef.Category = []string{"207P00000X", "207Q00000X", "207RC0000X", "207RH0003X", "207RX0202X", "208000000X", "2084P0800X", "2085R0001X", "208600000X", "208VP0014X", "261QR1300X", "273R00000X", "282N00000X", "282NC0060X", "3416L0300X", "363A00000X", "363LF0000X"}
	sourceDef.Aliases = []string{"GILA REGIONAL FAMILY MEDICINE", "GILA REGIONAL PEDIATRICS", "GILA REGIONAL SURGICAL SERVICES II", "PSYCHIATRIC"}
	sourceDef.Identifiers = map[string][]string{"http://hl7.org/fhir/sid/us-npi": []string{"1336220839", "1497301824", "1568017143", "1619053709", "1619094109", "1730722265", "1831555366", "1841835840", "1922626407"}}
	sourceDef.SecretKeyPrefix = "athena"

	return sourceDef, err
}
