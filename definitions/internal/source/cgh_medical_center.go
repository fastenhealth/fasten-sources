// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package source

import (
	platform "github.com/fastenhealth/fasten-sources/definitions/internal/platform"
	models "github.com/fastenhealth/fasten-sources/definitions/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
)

// https://fhir-myrecord.cerner.com/r4/Es63ilPkkETpas1hoRy0bFNgpWFGLAl3/metadata
func GetSourceCghMedicalCenter(env pkg.FastenLighthouseEnvType, clientIdLookup map[pkg.SourceType]string) (models.LighthouseSourceDefinition, error) {
	sourceDef, err := platform.GetSourceCerner(env, clientIdLookup)
	sourceDef.AuthorizationEndpoint = "https://authorization.cerner.com/tenants/Es63ilPkkETpas1hoRy0bFNgpWFGLAl3/protocols/oauth2/profiles/smart-v1/personas/patient/authorize"
	sourceDef.TokenEndpoint = "https://authorization.cerner.com/tenants/Es63ilPkkETpas1hoRy0bFNgpWFGLAl3/protocols/oauth2/profiles/smart-v1/token"
	sourceDef.IntrospectionEndpoint = "https://authorization.cerner.com/tokeninfo"

	sourceDef.Audience = "https://fhir-myrecord.cerner.com/r4/Es63ilPkkETpas1hoRy0bFNgpWFGLAl3"

	sourceDef.ApiEndpointBaseUrl = "https://fhir-myrecord.cerner.com/r4/Es63ilPkkETpas1hoRy0bFNgpWFGLAl3"
	// retrieve client-id, if available
	if clientId, clientIdOk := clientIdLookup[pkg.SourceTypeCghMedicalCenter]; clientIdOk {
		sourceDef.ClientId = clientId
	}
	sourceDef.RedirectUri = pkg.GetCallbackEndpoint(string(pkg.SourceTypeCerner))

	sourceDef.Display = "CGH Medical Center"
	sourceDef.SourceType = pkg.SourceTypeCghMedicalCenter
	sourceDef.Category = []string{"332B00000X", "273R00000X", "275N00000X", "282N00000X", "333600000X", "3336C0002X", "341600000X", "251F00000X", "207Q00000X"}
	sourceDef.Identifiers = map[string][]string{"http://hl7.org/fhir/sid/us-npi": []string{"1386929826", "1902854623", "1720105448", "1811014525", "1750752739", "1629196688", "1902073521", "1447415724", "1184661514", "1548540636"}}
	sourceDef.SecretKeyPrefix = "cerner"

	return sourceDef, err
}
