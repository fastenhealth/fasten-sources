// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package source

import (
	platform "github.com/fastenhealth/fasten-sources/definitions/internal/platform"
	models "github.com/fastenhealth/fasten-sources/definitions/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
)

// https://fhir.nextgen.com/nge/prod/fhir-api-r4/fhir/r4/metadata
func GetSourceHighDesertHeartVascularInstitute(env pkg.FastenLighthouseEnvType, clientIdLookup map[pkg.SourceType]string) (models.LighthouseSourceDefinition, error) {
	sourceDef, err := platform.GetSourceNextgen(env, clientIdLookup)
	sourceDef.AuthorizationEndpoint = "https://fhir.nextgen.com/nge/prod/patient-oauth/authorize"
	sourceDef.TokenEndpoint = "https://fhir.nextgen.com/nge/prod/patient-oauth/token"

	sourceDef.Audience = "https://fhir.nextgen.com/nge/prod/fhir-api-r4/fhir/r4"

	sourceDef.ApiEndpointBaseUrl = "https://fhir.nextgen.com/nge/prod/fhir-api-r4/fhir/r4"
	// retrieve client-id, if available
	if clientId, clientIdOk := clientIdLookup[pkg.SourceTypeHighDesertHeartVascularInstitute]; clientIdOk {
		sourceDef.ClientId = clientId
	}
	sourceDef.RedirectUri = pkg.GetCallbackEndpoint(string(pkg.SourceTypeNextgen))

	sourceDef.Display = "High Desert Heart Vascular Institute"
	sourceDef.SourceType = pkg.SourceTypeHighDesertHeartVascularInstitute
	sourceDef.PatientAccessUrl = "https://www.bing.com/ck/a?!&&p=56af249265d226ffJmltdHM9MTY3ODMyMDAwMCZpZ3VpZD0zZTRiMjI1OC1mODVmLTY4OTQtMGVkOS0zMGViZjlmNDY5MWUmaW5zaWQ9NTQ1Ng&ptn=3&hsh=3&fclid=3e4b2258-f85f-6894-0ed9-30ebf9f4691e&u=a1aHR0cHM6Ly93d3cuYmluZy5jb20vYWxpbmsvbGluaz91cmw9aHR0cCUzYSUyZiUyZmhlYXJ0aW5zdGl0dXRlaGQuY29tJTJmaW5kZXglMmZpbmRleC5waHAmc291cmNlPXNlcnAtbG9jYWwmaD0lMmZzcVJ5YU5manpOekJTdDN5aVc3dWNiRU16T25CeGZoaVAlMmJrWkY4TXJGTSUzZCZwPWxvY2Fsd2Vic2l0ZWdvYmlndGl0bGUmaWc9NTBDNUZENjVBODVDNDYxODhFNDc4RDk0QjhDQ0I3RjAmeXBpZD1ZTjk3eDE5NDc2NDc4&ntb=1"
	sourceDef.SecretKeyPrefix = "nextgen"

	return sourceDef, err
}
