// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package source

import (
	platform "github.com/fastenhealth/fasten-sources/definitions/internal/platform"
	models "github.com/fastenhealth/fasten-sources/definitions/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
)

// https://fhir-myrecord.cerner.com/r4/ae718b75-7880-43e4-bded-99af66193990/metadata
func GetSourceStCharlesEyeCenterInc(env pkg.FastenLighthouseEnvType, clientIdLookup map[pkg.SourceType]string) (models.LighthouseSourceDefinition, error) {
	sourceDef, err := platform.GetSourceCerner(env, clientIdLookup)
	sourceDef.AuthorizationEndpoint = "https://authorization.cerner.com/tenants/ae718b75-7880-43e4-bded-99af66193990/protocols/oauth2/profiles/smart-v1/personas/patient/authorize"
	sourceDef.TokenEndpoint = "https://authorization.cerner.com/tenants/ae718b75-7880-43e4-bded-99af66193990/protocols/oauth2/profiles/smart-v1/token"
	sourceDef.IntrospectionEndpoint = "https://authorization.cerner.com/tokeninfo"

	sourceDef.Audience = "https://fhir-myrecord.cerner.com/r4/ae718b75-7880-43e4-bded-99af66193990"

	sourceDef.ApiEndpointBaseUrl = "https://fhir-myrecord.cerner.com/r4/ae718b75-7880-43e4-bded-99af66193990"
	// retrieve client-id, if available
	if clientId, clientIdOk := clientIdLookup[pkg.SourceTypeStCharlesEyeCenterInc]; clientIdOk {
		sourceDef.ClientId = clientId
	}
	sourceDef.RedirectUri = pkg.GetCallbackEndpoint(string(pkg.SourceTypeCerner))

	sourceDef.Display = "St Charles Eye Center, Inc."
	sourceDef.SourceType = pkg.SourceTypeStCharlesEyeCenterInc
	sourceDef.Category = []string{}
	sourceDef.Aliases = []string{}
	sourceDef.PatientAccessUrl = "https://r.search.yahoo.com/_ylt=AwrKAXNaxwxkABMjsS_nHgx.;_ylu=Y29sbwMEcG9zAzEEdnRpZAMEc2VjA3Ny/RV=2/RE=1678587867/RO=10/RU=https%3a%2f%2fdoctor.webmd.com%2fdoctor%2fsudha-govindarajan-a738d035-ce97-405f-9447-4a972ed30291-overview/RK=2/RS=AkfYGVAXcAdW6WyTLeQcsffLEyg-"
	sourceDef.SecretKeyPrefix = "cerner"

	return sourceDef, err
}
