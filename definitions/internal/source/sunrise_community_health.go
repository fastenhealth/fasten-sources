// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package source

import (
	platform "github.com/fastenhealth/fasten-sources/definitions/internal/platform"
	models "github.com/fastenhealth/fasten-sources/definitions/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
)

// https://api.platform.athenahealth.com/fhir/r4/metadata
func GetSourceSunriseCommunityHealth(env pkg.FastenLighthouseEnvType, clientIdLookup map[pkg.SourceType]string) (models.LighthouseSourceDefinition, error) {
	sourceDef, err := platform.GetSourceAthena(env, clientIdLookup)
	sourceDef.AuthorizationEndpoint = "https://api.platform.athenahealth.com/oauth2/v1/authorize"
	sourceDef.TokenEndpoint = "https://api.platform.athenahealth.com/oauth2/v1/token"

	sourceDef.Audience = "https://api.platform.athenahealth.com/fhir/r4"

	sourceDef.ApiEndpointBaseUrl = "https://api.platform.athenahealth.com/fhir/r4"
	// retrieve client-id, if available
	if clientId, clientIdOk := clientIdLookup[pkg.SourceTypeSunriseCommunityHealth]; clientIdOk {
		sourceDef.ClientId = clientId
	}
	sourceDef.RedirectUri = pkg.GetCallbackEndpoint(string(pkg.SourceTypeAthena))

	sourceDef.Display = "Sunrise Community Health"
	sourceDef.SourceType = pkg.SourceTypeSunriseCommunityHealth
	sourceDef.Category = []string{"1223G0001X", "1223P0221X", "261QF0400X", "3336C0002X", "3336C0003X"}
	sourceDef.Aliases = []string{"KID'S CARE CLINIC", "LOVELAND COMMUNITY HEALTH PHARMACY", "MONFORT CHILDREN'S CLINIC", "MONFORT CHILDREN'S DENTAL CLINIC", "MONFORT FAMILY CLINIC", "SUMMITSTONE CLINIC", "SUNRISE FAMILY DENTAL", "SUNRISE NORTH RANGE", "SUNRISE THOMPSON DENTAL CLINIC", "SUNRISE THOMPSON HEALTH CLINIC"}
	sourceDef.Identifiers = map[string][]string{"http://hl7.org/fhir/sid/us-npi": []string{"1043937576", "1295041598", "1295732048", "1609923283", "1699073395", "1740791011", "1750660726", "1811295264", "1871890152", "1972118073"}}
	sourceDef.SecretKeyPrefix = "athena"

	return sourceDef, err
}
