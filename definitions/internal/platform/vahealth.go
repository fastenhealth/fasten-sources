// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package platform

import (
	models "github.com/fastenhealth/fasten-sources/definitions/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
)

// https://sandbox-api.va.gov/services/fhir/v0/r4/.well-known/smart-configuration
// https://sandbox-api.va.gov/services/fhir/v0/r4/metadata
// https://developer.va.gov/explore/api/patient-health/docs?version=current
func GetSourceVahealth(env pkg.FastenLighthouseEnvType, clientIdLookup map[pkg.SourceType]string) (models.LighthouseSourceDefinition, error) {
	sourceDef := models.LighthouseSourceDefinition{}
	sourceDef.AuthorizationEndpoint = "https://sandbox-api.va.gov/oauth2/authorization"
	sourceDef.TokenEndpoint = "https://sandbox-api.va.gov/oauth2/token"

	sourceDef.Issuer = "https://sandbox-api.va.gov/services/fhir/v0/r4"
	sourceDef.Scopes = []string{"launch/patient", "offline_access", "openid", "patient/AllergyIntolerance.read", "patient/Appointment.read", "patient/Binary.read", "patient/Condition.read", "patient/Device.read", "patient/DeviceRequest.read", "patient/DiagnosticReport.read", "patient/DocumentReference.read", "patient/Encounter.read", "patient/Immunization.read", "patient/Medication.read", "patient/MedicationRequest.read", "patient/Observation.read", "patient/Patient.read", "patient/Practitioner.read", "patient/PractitionerRole.read", "patient/Procedure.read", "profile"}
	sourceDef.GrantTypesSupported = []string{"authorization_code"}
	sourceDef.ResponseType = []string{"code"}
	sourceDef.ResponseModesSupported = []string{"query"}

	sourceDef.ApiEndpointBaseUrl = "https://sandbox-api.va.gov/services/fhir/v0/r4"
	// retrieve client-id, if available
	if clientId, clientIdOk := clientIdLookup[pkg.SourceTypeVahealth]; clientIdOk {
		sourceDef.ClientId = clientId
	}
	sourceDef.RedirectUri = pkg.GetCallbackEndpoint(string(pkg.SourceTypeVahealth))

	sourceDef.Display = "VA Health"
	sourceDef.PlatformType = pkg.SourceTypeVahealth
	//sourceDef.SourceType = pkg.SourceTypeVahealth
	//sourceDef.Category = []string{"Insurance"}
	//sourceDef.Aliases = []string{}
	//sourceDef.PatientAccessUrl = "https://www.va.gov"
	//sourceDef.PatientAccessDescription = "Service is for educational and informational purposes, not clinical decisions."

	return sourceDef, nil
}
