// Copyright (C) Fasten Health, Inc. - All Rights Reserved.
//
// THIS FILE IS GENERATED BY https://github.com/fastenhealth/fasten-sources-gen
// PLEASE DO NOT EDIT BY HAND

package platform

import (
	models "github.com/fastenhealth/fasten-sources/definitions/models"
	pkg "github.com/fastenhealth/fasten-sources/pkg"
)

/*
https://fhir.eclinicalworks.com/ecwopendev/
*/
// https://fhir4.eclinicalworks.com/fhir/r4/JAFJCD/.well-known/smart-configuration
// https://fhir4.eclinicalworks.com/fhir/r4/JAFJCD/metadata
// https://fhir.eclinicalworks.com/ecwopendev/documentation
func GetSourceEclinicalworks(env pkg.FastenLighthouseEnvType, clientIdLookup map[pkg.SourceType]string) (models.LighthouseSourceDefinition, error) {
	sourceDef := models.LighthouseSourceDefinition{}
	sourceDef.AuthorizationEndpoint = "https://oauthserver.eclinicalworks.com/oauth/oauth2/authorize"
	sourceDef.TokenEndpoint = "https://oauthserver.eclinicalworks.com/oauth/oauth2/token"

	sourceDef.Issuer = "https://fhir4.eclinicalworks.com/fhir/r4/JAFJCD"
	sourceDef.Scopes = []string{"fhirUser", "offline_access", "openid", "patient/Patient.read"}
	sourceDef.GrantTypesSupported = []string{"authorization_code"}
	sourceDef.ResponseType = []string{"code"}
	sourceDef.ResponseModesSupported = []string{"query"}
	sourceDef.Audience = "https://fhir4.eclinicalworks.com/fhir/r4/JAFJCD"
	sourceDef.CodeChallengeMethodsSupported = []string{"S256"}

	sourceDef.ApiEndpointBaseUrl = "https://fhir4.eclinicalworks.com/fhir/r4/JAFJCD"
	// retrieve client-id, if available
	if clientId, clientIdOk := clientIdLookup[pkg.SourceTypeEclinicalworks]; clientIdOk {
		sourceDef.ClientId = clientId
	}
	sourceDef.RedirectUri = pkg.GetCallbackEndpoint(string(pkg.SourceTypeEclinicalworks))
	sourceDef.Confidential = true

	sourceDef.Display = "eClinicalWorks - Healow (Sandbox)"
	sourceDef.PlatformType = pkg.SourceTypeEclinicalworks
	sourceDef.SourceType = pkg.SourceTypeEclinicalworks
	sourceDef.PatientAccessUrl = "https://fhir.eclinicalworks.com/ecwopendev/"

	return sourceDef, nil
}
